// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: vtbenchmark.proto

package vtbenchmark

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VTEnumMessage_VTEmbeddedEnum int32

const (
	VTEnumMessage_UNIVERSAL VTEnumMessage_VTEmbeddedEnum = 0
	VTEnumMessage_WEB       VTEnumMessage_VTEmbeddedEnum = 1
	VTEnumMessage_IMAGES    VTEnumMessage_VTEmbeddedEnum = 2
	VTEnumMessage_LOCAL     VTEnumMessage_VTEmbeddedEnum = 3
	VTEnumMessage_NEWS      VTEnumMessage_VTEmbeddedEnum = 4
	VTEnumMessage_PRODUCTS  VTEnumMessage_VTEmbeddedEnum = 5
	VTEnumMessage_VIDEO     VTEnumMessage_VTEmbeddedEnum = 6
)

// Enum value maps for VTEnumMessage_VTEmbeddedEnum.
var (
	VTEnumMessage_VTEmbeddedEnum_name = map[int32]string{
		0: "UNIVERSAL",
		1: "WEB",
		2: "IMAGES",
		3: "LOCAL",
		4: "NEWS",
		5: "PRODUCTS",
		6: "VIDEO",
	}
	VTEnumMessage_VTEmbeddedEnum_value = map[string]int32{
		"UNIVERSAL": 0,
		"WEB":       1,
		"IMAGES":    2,
		"LOCAL":     3,
		"NEWS":      4,
		"PRODUCTS":  5,
		"VIDEO":     6,
	}
)

func (x VTEnumMessage_VTEmbeddedEnum) Enum() *VTEnumMessage_VTEmbeddedEnum {
	p := new(VTEnumMessage_VTEmbeddedEnum)
	*p = x
	return p
}

func (x VTEnumMessage_VTEmbeddedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VTEnumMessage_VTEmbeddedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_vtbenchmark_proto_enumTypes[0].Descriptor()
}

func (VTEnumMessage_VTEmbeddedEnum) Type() protoreflect.EnumType {
	return &file_vtbenchmark_proto_enumTypes[0]
}

func (x VTEnumMessage_VTEmbeddedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VTEnumMessage_VTEmbeddedEnum.Descriptor instead.
func (VTEnumMessage_VTEmbeddedEnum) EnumDescriptor() ([]byte, []int) {
	return file_vtbenchmark_proto_rawDescGZIP(), []int{0, 0}
}

type VTEnumMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string                       `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Embedded VTEnumMessage_VTEmbeddedEnum `protobuf:"varint,4,opt,name=Embedded,proto3,enum=VTEnumMessage_VTEmbeddedEnum" json:"Embedded,omitempty"`
}

func (x *VTEnumMessage) Reset() {
	*x = VTEnumMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vtbenchmark_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VTEnumMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VTEnumMessage) ProtoMessage() {}

func (x *VTEnumMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vtbenchmark_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VTEnumMessage.ProtoReflect.Descriptor instead.
func (*VTEnumMessage) Descriptor() ([]byte, []int) {
	return file_vtbenchmark_proto_rawDescGZIP(), []int{0}
}

func (x *VTEnumMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VTEnumMessage) GetEmbedded() VTEnumMessage_VTEmbeddedEnum {
	if x != nil {
		return x.Embedded
	}
	return VTEnumMessage_UNIVERSAL
}

type VTEmbeddedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VTEmbeddedData []byte `protobuf:"bytes,1,opt,name=VTEmbeddedData,proto3" json:"VTEmbeddedData,omitempty"`
}

func (x *VTEmbeddedMessage) Reset() {
	*x = VTEmbeddedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vtbenchmark_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VTEmbeddedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VTEmbeddedMessage) ProtoMessage() {}

func (x *VTEmbeddedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vtbenchmark_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VTEmbeddedMessage.ProtoReflect.Descriptor instead.
func (*VTEmbeddedMessage) Descriptor() ([]byte, []int) {
	return file_vtbenchmark_proto_rawDescGZIP(), []int{1}
}

func (x *VTEmbeddedMessage) GetVTEmbeddedData() []byte {
	if x != nil {
		return x.VTEmbeddedData
	}
	return nil
}

type VTMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuiltMap map[string]float64 `protobuf:"bytes,1,rep,name=BuiltMap,proto3" json:"BuiltMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *VTMap) Reset() {
	*x = VTMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vtbenchmark_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VTMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VTMap) ProtoMessage() {}

func (x *VTMap) ProtoReflect() protoreflect.Message {
	mi := &file_vtbenchmark_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VTMap.ProtoReflect.Descriptor instead.
func (*VTMap) Descriptor() ([]byte, []int) {
	return file_vtbenchmark_proto_rawDescGZIP(), []int{2}
}

func (x *VTMap) GetBuiltMap() map[string]float64 {
	if x != nil {
		return x.BuiltMap
	}
	return nil
}

type VTBenchmark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string               `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Embedded    *VTEmbeddedMessage   `protobuf:"bytes,2,opt,name=Embedded,proto3" json:"Embedded,omitempty"`
	EmbeddedMap *VTMap               `protobuf:"bytes,3,opt,name=EmbeddedMap,proto3" json:"EmbeddedMap,omitempty"`
	EnumMessage *VTEnumMessage       `protobuf:"bytes,4,opt,name=EnumMessage,proto3" json:"EnumMessage,omitempty"`
	Repeated    []*VTEmbeddedMessage `protobuf:"bytes,5,rep,name=Repeated,proto3" json:"Repeated,omitempty"`
}

func (x *VTBenchmark) Reset() {
	*x = VTBenchmark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vtbenchmark_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VTBenchmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VTBenchmark) ProtoMessage() {}

func (x *VTBenchmark) ProtoReflect() protoreflect.Message {
	mi := &file_vtbenchmark_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VTBenchmark.ProtoReflect.Descriptor instead.
func (*VTBenchmark) Descriptor() ([]byte, []int) {
	return file_vtbenchmark_proto_rawDescGZIP(), []int{3}
}

func (x *VTBenchmark) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VTBenchmark) GetEmbedded() *VTEmbeddedMessage {
	if x != nil {
		return x.Embedded
	}
	return nil
}

func (x *VTBenchmark) GetEmbeddedMap() *VTMap {
	if x != nil {
		return x.EmbeddedMap
	}
	return nil
}

func (x *VTBenchmark) GetEnumMessage() *VTEnumMessage {
	if x != nil {
		return x.EnumMessage
	}
	return nil
}

func (x *VTBenchmark) GetRepeated() []*VTEmbeddedMessage {
	if x != nil {
		return x.Repeated
	}
	return nil
}

var File_vtbenchmark_proto protoreflect.FileDescriptor

var file_vtbenchmark_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x74, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x56, 0x54, 0x45, 0x6e, 0x75, 0x6d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x39, 0x0a, 0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x56, 0x54, 0x45, 0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x56, 0x54, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x22, 0x62, 0x0a, 0x0e, 0x56, 0x54,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x57,
	0x45, 0x42, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x53, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x45, 0x57, 0x53, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x53, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x06, 0x22, 0x3b,
	0x0a, 0x11, 0x56, 0x54, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x56, 0x54, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x56, 0x54, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x05, 0x56,
	0x54, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x4d, 0x61, 0x70,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x56, 0x54, 0x4d, 0x61, 0x70, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x42, 0x75,
	0x69, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x3b, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xe3, 0x01, 0x0a, 0x0b, 0x56, 0x54, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x56, 0x54, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x28, 0x0a,
	0x0b, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56, 0x54, 0x4d, 0x61, 0x70, 0x52, 0x0b, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x45, 0x6e, 0x75, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x56,
	0x54, 0x45, 0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x45, 0x6e,
	0x75, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x56, 0x54,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x08, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x0e, 0x5a, 0x0c, 0x2f, 0x76, 0x74,
	0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_vtbenchmark_proto_rawDescOnce sync.Once
	file_vtbenchmark_proto_rawDescData = file_vtbenchmark_proto_rawDesc
)

func file_vtbenchmark_proto_rawDescGZIP() []byte {
	file_vtbenchmark_proto_rawDescOnce.Do(func() {
		file_vtbenchmark_proto_rawDescData = protoimpl.X.CompressGZIP(file_vtbenchmark_proto_rawDescData)
	})
	return file_vtbenchmark_proto_rawDescData
}

var file_vtbenchmark_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vtbenchmark_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_vtbenchmark_proto_goTypes = []interface{}{
	(VTEnumMessage_VTEmbeddedEnum)(0), // 0: VTEnumMessage.VTEmbeddedEnum
	(*VTEnumMessage)(nil),             // 1: VTEnumMessage
	(*VTEmbeddedMessage)(nil),         // 2: VTEmbeddedMessage
	(*VTMap)(nil),                     // 3: VTMap
	(*VTBenchmark)(nil),               // 4: VTBenchmark
	nil,                               // 5: VTMap.BuiltMapEntry
}
var file_vtbenchmark_proto_depIdxs = []int32{
	0, // 0: VTEnumMessage.Embedded:type_name -> VTEnumMessage.VTEmbeddedEnum
	5, // 1: VTMap.BuiltMap:type_name -> VTMap.BuiltMapEntry
	2, // 2: VTBenchmark.Embedded:type_name -> VTEmbeddedMessage
	3, // 3: VTBenchmark.EmbeddedMap:type_name -> VTMap
	1, // 4: VTBenchmark.EnumMessage:type_name -> VTEnumMessage
	2, // 5: VTBenchmark.Repeated:type_name -> VTEmbeddedMessage
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_vtbenchmark_proto_init() }
func file_vtbenchmark_proto_init() {
	if File_vtbenchmark_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vtbenchmark_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VTEnumMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vtbenchmark_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VTEmbeddedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vtbenchmark_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VTMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vtbenchmark_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VTBenchmark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vtbenchmark_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vtbenchmark_proto_goTypes,
		DependencyIndexes: file_vtbenchmark_proto_depIdxs,
		EnumInfos:         file_vtbenchmark_proto_enumTypes,
		MessageInfos:      file_vtbenchmark_proto_msgTypes,
	}.Build()
	File_vtbenchmark_proto = out.File
	file_vtbenchmark_proto_rawDesc = nil
	file_vtbenchmark_proto_goTypes = nil
	file_vtbenchmark_proto_depIdxs = nil
}
